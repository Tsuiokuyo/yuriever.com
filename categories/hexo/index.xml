<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>hexo - 分類 - 於是我又重看一次</title><link>https://yuriever.com/categories/hexo/</link><description>hexo - 分類 - 於是我又重看一次</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><managingEditor>Tsuiokuyo@gmail.com (Tsuiokuyo)</managingEditor><webMaster>Tsuiokuyo@gmail.com (Tsuiokuyo)</webMaster><copyright>Tsuiokuyo</copyright><lastBuildDate>Sun, 17 Mar 2019 10:00:00 +0000</lastBuildDate><atom:link href="https://yuriever.com/categories/hexo/" rel="self" type="application/rss+xml"/><item><title>以前的子目錄所使用的模板</title><link>https://yuriever.com/posts/9132/</link><pubDate>Sun, 17 Mar 2019 10:00:00 +0000</pubDate><author>Tsuiokuyo</author><guid>https://yuriever.com/posts/9132/</guid><description>目前打算用來塞一些個人興趣的東西，不過要是打算重弄光是找資源就要花很多時間&amp;hellip;&amp;hellip;，全部都是基於HTML，畢竟Net</description></item><item><title>在HEXO底下新增自定義網頁</title><link>https://yuriever.com/posts/f192/</link><pubDate>Thu, 21 Feb 2019 10:00:00 +0000</pubDate><author>Tsuiokuyo</author><guid>https://yuriever.com/posts/f192/</guid><description>其實這也只是上一篇文章使Hexo不渲染html檔的延伸而已 要新增一個hexo底下的html網頁，就我目前的知識，方法約有兩種 一種是通過子域名</description></item><item><title>使Hexo不渲染html檔</title><link>https://yuriever.com/posts/d644/</link><pubDate>Fri, 15 Feb 2019 10:00:00 +0000</pubDate><author>Tsuiokuyo</author><guid>https://yuriever.com/posts/d644/</guid><description>這個早在我使用Google Search Console就已經弄過了，不過我原本使用的skip_render有點麻煩，現在要搞一個不被hexo渲染的HTM</description></item><item><title>hexo插件 Hexo-blog-encrypt文章加密</title><link>https://yuriever.com/posts/153/</link><pubDate>Sat, 19 Jan 2019 10:00:00 +0000</pubDate><author>Tsuiokuyo</author><guid>https://yuriever.com/posts/153/</guid><description>我發現有些想轉貼的文章，有些作者並沒有標示CC，而我也沒有必要為了自己這小小的網站去打擾作者，那麼我不如把文章加密就好了，畢竟這網站本意是為</description></item><item><title>hexo內嵌影片及影片自適應網頁</title><link>https://yuriever.com/posts/5a26/</link><pubDate>Mon, 31 Dec 2018 12:00:00 +0000</pubDate><author>Tsuiokuyo</author><guid>https://yuriever.com/posts/5a26/</guid><description>過程： ​ 在寫hexo的時候想在網頁嵌入一些影片以便懷舊事物的時候，發現markdown不支援直接在網站上瀏覽，必須以連結才可以播放，所以就打</description></item><item><title>hexo插件 hexo-abbrlink永久連結</title><link>https://yuriever.com/posts/ca1a/</link><pubDate>Sat, 29 Dec 2018 12:00:00 +0000</pubDate><author>Tsuiokuyo</author><guid>https://yuriever.com/posts/ca1a/</guid><description>由於hexo預設的文章連結是依照年/月/日/標題設定，而網址名稱若是中文的話會被編譯成ASCII碼，而變得相當冗長以及不好看，而且修改標題的</description></item><item><title>(三)Hexo部屬至netlify</title><link>https://yuriever.com/posts/9c3d/</link><pubDate>Fri, 28 Dec 2018 12:00:00 +0000</pubDate><author>Tsuiokuyo</author><guid>https://yuriever.com/posts/9c3d/</guid><description>這是最後一篇了吧 登入netlify後 New site from Git -&amp;gt; gitlab 選擇hexo的project 基本上，應該都自動導入了 建立好了後，網站就生成了， 首先先改個網址</description></item><item><title>(二)hexo github &amp; gitlab推送</title><link>https://yuriever.com/posts/945c/</link><pubDate>Fri, 28 Dec 2018 09:00:00 +0000</pubDate><author>Tsuiokuyo</author><guid>https://yuriever.com/posts/945c/</guid><description>這篇文章的瑕疵很多，如果沒有必要，最好去找其他人的文章比較好，因為我的部屬方法根本是自找麻煩，我最終的目的是要在使用netlify部屬Hex</description></item><item><title>(一)架設hexo部落格</title><link>https://yuriever.com/posts/2cd8/</link><pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate><author>Tsuiokuyo</author><guid>https://yuriever.com/posts/2cd8/</guid><description>安裝需求 Git 網址：https://git-scm.com/ Node.js 網址：https://nodejs.org/en/ hexo 網址：https://hexo</description></item></channel></rss>